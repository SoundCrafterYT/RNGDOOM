#library "start"
#include "zcommon.acs"

script "Watermark" ENTER
{
	SetFont("CONFONT");
	HudMessage(s:"RNGDOOM PTB V0.9"; HUDMSG_PLAIN, 0, CR_WHITE, 1.0, 0.0, 0.0);
}
script "AmmoStarter" ENTER
{
	If (CheckInventory("RNGAmmo")==0)
	{
		GiveInventory("Clip", random(1, 100));
		GiveInventory("RNGAmmo", 1);
	}
}
script "CVarSkillChecker" ENTER
{
	If(GameSkill() == SKILL_VERY_HARD)
	{
		GiveInventory("First50BMGUse", 1);
		SetCVAR("rng_malfunctionchance", 256);
		SetCVAR("rng_skipcursed", true);
		SetCVAR("rng_always50bmg", true);
		SetCVAR("rng_alwayscrit", true);
	}
	else
	{
		SetCVAR("rng_malfunctionchance", 2);
		SetCVAR("rng_skipcursed", false);
		SetCVAR("rng_always50bmg", false);
		SetCVAR("rng_alwayscrit", false);
	}
}
script "ChaingunBurstMode" (void)
{
	SetResultValue (GameSkill());
}
script "DeathExecuter" DEATH
{
	If(Gameskill() == SKILL_VERY_HARD)
	{
		SpawnProjectile (0, "InstableBFGBall", GetActorAngle(0) >> 8, 0, -999, 0, 128);
		SpawnProjectile (0, "InstableBFGBall", GetActorAngle(0) >> 8, 0, -999, 0, 128);
		SpawnProjectile (0, "InstableBFGBall", GetActorAngle(0) >> 8, 0, -999, 0, 128);
		SpawnProjectile (0, "InstableBFGBall", GetActorAngle(0) >> 8, 0, -999, 0, 128);
		GiveInventory ("Rage", 10);
	}
}
script 128 (void) NET
{
	If(Gameskill() == SKILL_VERY_HARD)
	{
		SetCVAR("sv_cheats", 1);
		if(CheckInventory("Rage") < 10)
		{
			HudMessage(s:"Rage meter not full"; HUDMSG_PLAIN, 1, CR_DARKRED, 0.5, 0.2, 2.0);
		}
		else if(Checkinventory("Rage") == 10)
		{
			HudMessage (s:"Rage Mode!!!"; HUDMSG_PLAIN, 1, CR_DARKRED, 0.5, 0.2, 3.0);
			SetCVAR("sv_fastweapons", 3);
			while (Checkinventory("Rage")!=0)
			{
				int rage = Checkinventory("Rage");
				Print (d:rage);
				TakeInventory ("Rage", 1);
				Delay (10);
			}
			if(Checkinventory("Rage")==0)
			{
				SetCVAR("sv_fastweapons", 0);
			}
		}
	}
}
script "WadChecker" (void)
{
	GetLevelInfo(LEVELINFO_CLUSTERNUM);
}
script "DoubleAmmoCapacity" (void)
{
	if (CheckInventory("DoubleAmmoOnce")==1)
	{
		SetAmmoCapacity ("Clip", GetAmmoCapacity("Clip") * 2);
		SetAmmoCapacity ("Shell", GetAmmoCapacity("Shell") * 2);
		SetAmmoCapacity ("RocketAmmo", GetAmmoCapacity("RocketAmmo") * 2);
		SetAmmoCapacity ("Cell", GetAmmoCapacity("Cell") * 2);
	}
	else if (CheckInventory("DoubleAmmoOnce")==2)
	{
		
	}
}